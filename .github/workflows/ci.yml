name: Continuous Integration

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ master ]

jobs:
  development:
    name: "OS ${{ matrix.os }} - Python ${{ matrix.python }} - Development"
    runs-on: "${{ matrix.os }}"
#   env:
    strategy:
      matrix:
        os: ["ubuntu-20.04", "windows-2019", "windows-2022"]
#       python: ["3.7", "3.8", "3.9", "3.10"]
        python: ["3.10"]
    steps:
      - uses: "actions/checkout@v2"
      - name: "Install pip"
        run: "make pip"
      - name: "Install pipenv"
        run: "make pipenv"
      - name: "Install dcr dependencies"
        run: "make pipenv_dev"
      - name: "Run Bandit for finding common security issues"
        run: |
          make bandit
      - name: "Run Flake8 for style guide enforcement"
        run: |
          make flake8
# TBD
#      - name: "Run MyPy for static typing"
#        run: |
#          make mypy
      - name: "Run PyLint for checking for errors in Python code"
        run: |
          make pylint
      - name: "Run pydocstyle for docstring style enforcement"
        run: |
          make pydocstyle
      - name: "Run pytest for writing better program"
        run: |
          make pytest

  production:
    name: "OS ${{ matrix.os }} - Python ${{ matrix.python }} - Production"
    runs-on: "${{ matrix.os }}"
    #   env:
    strategy:
      matrix:
        os: ["ubuntu-20.04", "windows-2019", "windows-2022"]
#       python: ["3.7", "3.8", "3.9", "3.10"]
        python: ["3.10"]
    steps:
      - uses: "actions/checkout@v2"
      - name: "Install python version"
        uses: gabrielfalcao/pyenv-action@v5
        with:
          default: "${{ matrix.python }}"
      - name: "Install pip"
        run: "make pip"
      - name: "Install pipenv"
        run: "make pipenv"
      - name: "Install dcr dependencies"
        run: "make pipenv_prod"
      - name: "Compile the Python code"
        run: "make compileall"
