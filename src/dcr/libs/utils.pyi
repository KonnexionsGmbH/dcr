"""Library Stub."""
import pathlib
from typing import Dict
from typing import Iterable
from typing import Tuple

import libs.db.cfg
from sqlalchemy import Table
from sqlalchemy import engine
from sqlalchemy.engine import Connection
from sqlalchemy.engine import Row

def check_directories() -> None: ...
def compute_sha256(file: pathlib.Path) -> str: ...
def debug_xml_element(
    is_info: bool, parent_tag: str, attrib: Dict[str, str], text: Iterable[str]
) -> None: ...
def delete_auxiliary_file(file_name: str) -> None: ...
def finalize_file_processing() -> None: ...
def initialise_document_child() -> None: ...
def prepare_document_4_next_step(next_file_type: str, next_step: str) -> None: ...
def prepare_file_names(
    file_extension: str = libs.db.cfg.DOCUMENT_FILE_TYPE_PDF,
) -> Tuple[str, str]: ...
def progress_msg(msg: str) -> None: ...
def progress_msg_connected() -> None: ...
def progress_msg_disconnected() -> None: ...
def progress_msg_empty_before(msg: str) -> None: ...
def report_document_error(error_code: str | None, error: str) -> None: ...
def reset_statistics_language() -> None: ...
def reset_statistics_total() -> None: ...
def select_document(conn: Connection, dbt: Table, next_step: str) -> engine.CursorResult: ...
def select_document_prepare() -> Table: ...
def select_language(conn: Connection, dbt: Table) -> engine.CursorResult: ...
def show_statistics_language() -> None: ...
def show_statistics_total() -> None: ...
def start_document_processing(document: Row) -> None: ...
def str_2_path(param: str) -> pathlib.Path: ...
def terminate_fatal(error_msg: str) -> None: ...
