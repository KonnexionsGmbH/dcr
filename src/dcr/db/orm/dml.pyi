"""Library Stub."""
import os
import typing

import sqlalchemy.engine

Columns: typing.TypeAlias = typing.Dict[
    str, typing.Union[os.PathLike[str], sqlalchemy.Integer, str]
]

def get_pdf_pages_no(
    file_name: str,
    file_type: str,
) -> sqlalchemy.Integer | None: ...
def insert_dbt_row(
    table_name: str,
    columns: Columns,
) -> sqlalchemy.Integer: ...
def insert_document_base() -> None: ...
def insert_document_child() -> None: ...
def dml_prepare(dbt_name: str) -> sqlalchemy.Table: ...
def select_content_tetml(
    conn: sqlalchemy.engine.Connection, dbt: sqlalchemy.Table, document_id: sqlalchemy.Integer
) -> sqlalchemy.engine.CursorResult: ...
def select_document(
    conn: sqlalchemy.engine.Connection, dbt: sqlalchemy.Table, next_step: str
) -> sqlalchemy.engine.CursorResult: ...
def select_document_base_file_name() -> str | None: ...
def select_document_file_name_id(document_id: sqlalchemy.Integer) -> str | None: ...
def select_document_file_name_sha256(
    document_id: sqlalchemy.Integer, sha256: str
) -> str | None: ...
def select_language(
    conn: sqlalchemy.engine.Connection, dbt: sqlalchemy.Table
) -> sqlalchemy.engine.CursorResult: ...
def select_run_run_id_last() -> int | sqlalchemy.Integer: ...
def select_version_version_unique() -> str: ...
def update_dbt_id(
    table_name: str,
    id_where: sqlalchemy.Integer,
    columns: typing.Dict[str, str],
) -> None: ...
def update_document_error(
    document_id: sqlalchemy.Integer, error_code: str, error_msg: str
) -> None: ...
def update_document_statistics(
    document_id: sqlalchemy.Integer,
    status: str,
) -> int: ...
