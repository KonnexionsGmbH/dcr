{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"dcr - Document Content Recognition Table of Contents 1. Introduction 2. Requirements 3. Installation 4. Operation 5. API Documentation 1. Introduction Based on the paper \"Unfolding the Structure of a Document using Deep Learning\" ( Rahman and Finin, 2019 ), this software project attempts to automatically recognize the structure in arbitrary PDF documents and thus make them more searchable in a more qualified manner. Documents not in PDF format are converted to PDF format using Pandoc . Documents based on scanning which, therefore, do not contain text elements, are scanned and converted to PDF format using the Tesseract OCR software. This process applies to all image format files e.g. jpeg, tiff etc., as well as scanned images in PDF format. High level system architecture from the paper: High level dcr architecture: 2. Requirements 3. Installation 4. Operation 5. API Documentation Modules TBD","title":"Home"},{"location":"#dcr-document-content-recognition","text":"","title":"dcr - Document Content Recognition"},{"location":"#table-of-contents","text":"1. Introduction 2. Requirements 3. Installation 4. Operation 5. API Documentation","title":"Table of Contents"},{"location":"#1-introduction","text":"Based on the paper \"Unfolding the Structure of a Document using Deep Learning\" ( Rahman and Finin, 2019 ), this software project attempts to automatically recognize the structure in arbitrary PDF documents and thus make them more searchable in a more qualified manner. Documents not in PDF format are converted to PDF format using Pandoc . Documents based on scanning which, therefore, do not contain text elements, are scanned and converted to PDF format using the Tesseract OCR software. This process applies to all image format files e.g. jpeg, tiff etc., as well as scanned images in PDF format.","title":" 1. Introduction"},{"location":"#high-level-system-architecture-from-the-paper","text":"","title":"High level system architecture from the paper:"},{"location":"#high-level-dcr-architecture","text":"","title":"High level dcr architecture:"},{"location":"#2-requirements","text":"","title":" 2. Requirements"},{"location":"#3-installation","text":"","title":" 3. Installation"},{"location":"#4-operation","text":"","title":" 4. Operation"},{"location":"#5-api-documentation","text":"","title":" 5. API Documentation"},{"location":"#modules","text":"TBD","title":"Modules"},{"location":"CODE_OF_CONDUCT/","text":"dcr - Contributor Covenant Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at info@konnexions.ch. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Code of Conduct"},{"location":"CODE_OF_CONDUCT/#dcr-contributor-covenant-code-of-conduct","text":"","title":"dcr - Contributor Covenant Code of Conduct"},{"location":"CODE_OF_CONDUCT/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"CODE_OF_CONDUCT/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"CODE_OF_CONDUCT/#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our Responsibilities"},{"location":"CODE_OF_CONDUCT/#scope","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"CODE_OF_CONDUCT/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at info@konnexions.ch. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement"},{"location":"CODE_OF_CONDUCT/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Attribution"},{"location":"CONTRIBUTING/","text":"dcr - Contributing In case of software changes we strongly recommend you to respect the license terms. fork it create your feature branch ( git checkout -b my-new-feature ) commit your changes ( git commit -am 'Add some feature' ) push to the branch ( git push origin my-new-feature ) create a new pull request Action points to be considered when adding a new database driver and / or a new programming language: README.md Release-Notes.md","title":"Contributing"},{"location":"CONTRIBUTING/#dcr-contributing","text":"In case of software changes we strongly recommend you to respect the license terms. fork it create your feature branch ( git checkout -b my-new-feature ) commit your changes ( git commit -am 'Add some feature' ) push to the branch ( git push origin my-new-feature ) create a new pull request Action points to be considered when adding a new database driver and / or a new programming language: README.md Release-Notes.md","title":"dcr - Contributing"},{"location":"Release-History/","text":"dcr - Release History TBD","title":"Releease History"},{"location":"Release-History/#dcr-release-history","text":"TBD","title":"dcr - Release History"},{"location":"Release-Notes/","text":"dcr - Release Notes Version 1.0.0 Release Date: dd.mm.2021 New Features TBD Applied Software Software Version Remark C++ (gcc) base GNU Autoconf base GNU Automake base GNU make base Leptonica Library 1.82.0 Tesseract OCR 5.0.0 Open issues TBD: (see here ) Detailed Open Issues TBD Issue: TBD TBD","title":"Releease Notes"},{"location":"Release-Notes/#dcr-release-notes","text":"","title":"dcr - Release Notes"},{"location":"Release-Notes/#version-100","text":"Release Date: dd.mm.2021","title":"Version 1.0.0"},{"location":"Release-Notes/#new-features","text":"TBD","title":"New Features"},{"location":"Release-Notes/#applied-software","text":"Software Version Remark C++ (gcc) base GNU Autoconf base GNU Automake base GNU make base Leptonica Library 1.82.0 Tesseract OCR 5.0.0","title":"Applied Software"},{"location":"Release-Notes/#open-issues","text":"TBD: (see here )","title":"Open issues"},{"location":"Release-Notes/#detailed-open-issues","text":"","title":"Detailed Open Issues"},{"location":"Release-Notes/#tbd","text":"","title":" TBD"},{"location":"Release-Notes/#issue-tbd","text":"TBD","title":"Issue: TBD"},{"location":"research/","text":"OCRBench - Research. Papers Hegghammer, T. (2021). OCR with Tesseract, Amazon Textract, and Google Document AI: a benchmarking experiment. Journal of Computational Social Science, 2021, pp. 2432-2725 [Online] Available at https://doi.org/10.1007/s42001-021-00149-1 (Accessed 04 January 2022). Optical Character Recognition (OCR) can open up understudied historical documents to computational analysis, but the accuracy of OCR software varies. This article reports a benchmarking experiment comparing the performance of Tesseract, Amazon Textract, and Google Document AI on images of English and Arabic text. English-language book scans (n=322) and Arabic-language article scans (n=100) were replicated 43 times with different types of artificial noise for a corpus of 18,568 documents, generating 51,304 process requests. Document AI delivered the best results, and the server-based processors (Textract and Document AI) performed substantially better than Tesseract, especially on noisy documents. Accuracy for English was considerably higher than for Arabic. Specifying the relative performance of three leading OCR products and the differential effects of commonly found noise types can help scholars identify better OCR solutions for their research needs. The test materials have been preserved in the openly available \u201cNoisy OCR Dataset\u201d (NOD) for reuse in future benchmarking studies. Minaee, S. et al. (2021). Deep Learning Based Text Classification: A Comprehensive Review. arXiv [Online] Available at https://arxiv.org/abs/2004.03705 (Accessed 04 January 2022). Deep learning based models have surpassed classical machine learning based approaches in various text classification tasks, including sentiment analysis, news categorization, question answering, and natural language inference. In this paper, we provide a comprehensive review of more than 150 deep learning based models for text classification developed in recent years, and discuss their technical contributions, similarities, and strengths. We also provide a summary of more than 40 popular datasets widely used for text classification. Finally, we provide a quantitative analysis of the performance of different deep learning models on popular benchmarks, and discuss future research directions. Paa\u00df G., Konya I. (2011) Machine Learning for Document Structure Recognition. In: Mehler A., K\u00fchnberger KU., Lobin H., L\u00fcngen H., Storrer A., Witt A. (eds) Modeling, Learning, and Processing of Text Technological Data Structures. Studies in Computational Intelligence, vol 370. Springer Verlag GmbH, Heidelberg, Germany. Available at https://www.researchgate.net/publication/265487498_Machine_Learning_for_Document_Structure_Recognition (Accessed 04 January 2022). The backbone of the information age is digital information which may be searched, accessed, and transferred instantaneously. Therefore the digitization of paper documents is extremely interesting. This chapter describes approaches for document structure recognition detecting the hierarchy of physical components in images of documents, such as pages, paragraphs, and figures, and transforms this into a hierarchy of logical components, such as titles, authors, and sections. This structural information improves readability and is useful for indexing and retrieving information contained in documents. First we present a rule-based system segmenting the document image and estimating the logical role of these zones. It is extensively used for processing newspaper collections showing world-class performance. In the second part we introduce several machine learning approaches exploring large numbers of interrelated features. They can be adapted to geometrical models of the document structure, which may be set up as a linear sequence or a general graph. These advanced models require far more computational resources but show a better performance than simpler alternatives and might be used in future. Power R., Scott D., Bouayad-Agha, N. (2003) Document Structure. Computational Linguistics, 2003, Volume 29, Issue 2, pp. 211-260 [Online] The MIT Press, Cambridge, USA. Available at https://direct.mit.edu/coli/article/29/2/211/1803/Document-Structure (Accessed 05 January 2022). We argue the case for abstract document structure as a separate descriptive level in the analysis and generation of written texts. The purpose of this representation is to mediate between the message of a text (i.e., its discourse structure) and its physical presentation (i.e., its organization into graphical constituents like sections, paragraphs, sentences, bulleted lists, figures, and footnotes). Abstract document structure can be seen as an extension of Nunberg's \u201ctext-grammar\u201d it is also closely related to \u201clogical\u201d markup in languages like HTML and LaTEX. We show that by using this intermediate representation, several subtasks in language generation and language understanding can be defined more cleanly. Rahman, M., Finin, T. (2019). Unfolding the Structure of a Document using Deep Learning. arXiv [Online] Available at https://arxiv.org/abs/1910.03678 (Accessed 07 January 2022). Understanding and extracting of information from large documents, such as business opportunities, academic articles, medical documents and technical reports, poses challenges not present in short documents. Such large documents may be multi-themed, complex, noisy and cover diverse topics. We describe a framework that can analyze large documents and help people and computer systems locate desired information in them. We aim to automatically identify and classify different sections of documents and understand their purpose within the document. A key contribution of our research is modeling and extracting the logical and semantic structure of electronic documents using deep learning techniques. We evaluate the effectiveness and robustness of our framework through extensive experiments on two collections: more than one million scholarly articles from arXiv and a collection of requests for proposal documents from government sources.","title":"OCRBench - Research."},{"location":"research/#ocrbench-research","text":"","title":"OCRBench - Research."},{"location":"research/#papers","text":"","title":"Papers"},{"location":"research/#hegghammer-t-2021-ocr-with-tesseract-amazon-textract-and-google-document-ai-a-benchmarking-experiment","text":"Journal of Computational Social Science, 2021, pp. 2432-2725 [Online] Available at https://doi.org/10.1007/s42001-021-00149-1 (Accessed 04 January 2022). Optical Character Recognition (OCR) can open up understudied historical documents to computational analysis, but the accuracy of OCR software varies. This article reports a benchmarking experiment comparing the performance of Tesseract, Amazon Textract, and Google Document AI on images of English and Arabic text. English-language book scans (n=322) and Arabic-language article scans (n=100) were replicated 43 times with different types of artificial noise for a corpus of 18,568 documents, generating 51,304 process requests. Document AI delivered the best results, and the server-based processors (Textract and Document AI) performed substantially better than Tesseract, especially on noisy documents. Accuracy for English was considerably higher than for Arabic. Specifying the relative performance of three leading OCR products and the differential effects of commonly found noise types can help scholars identify better OCR solutions for their research needs. The test materials have been preserved in the openly available \u201cNoisy OCR Dataset\u201d (NOD) for reuse in future benchmarking studies.","title":" Hegghammer, T. (2021). OCR with Tesseract, Amazon Textract, and Google Document AI: a benchmarking experiment."},{"location":"research/#minaee-s-et-al-2021-deep-learning-based-text-classification-a-comprehensive-review","text":"arXiv [Online] Available at https://arxiv.org/abs/2004.03705 (Accessed 04 January 2022). Deep learning based models have surpassed classical machine learning based approaches in various text classification tasks, including sentiment analysis, news categorization, question answering, and natural language inference. In this paper, we provide a comprehensive review of more than 150 deep learning based models for text classification developed in recent years, and discuss their technical contributions, similarities, and strengths. We also provide a summary of more than 40 popular datasets widely used for text classification. Finally, we provide a quantitative analysis of the performance of different deep learning models on popular benchmarks, and discuss future research directions.","title":" Minaee, S. et al. (2021). Deep Learning Based Text Classification: A Comprehensive Review."},{"location":"research/#paa-g-konya-i-2011-machine-learning-for-document-structure-recognition","text":"In: Mehler A., K\u00fchnberger KU., Lobin H., L\u00fcngen H., Storrer A., Witt A. (eds) Modeling, Learning, and Processing of Text Technological Data Structures. Studies in Computational Intelligence, vol 370. Springer Verlag GmbH, Heidelberg, Germany. Available at https://www.researchgate.net/publication/265487498_Machine_Learning_for_Document_Structure_Recognition (Accessed 04 January 2022). The backbone of the information age is digital information which may be searched, accessed, and transferred instantaneously. Therefore the digitization of paper documents is extremely interesting. This chapter describes approaches for document structure recognition detecting the hierarchy of physical components in images of documents, such as pages, paragraphs, and figures, and transforms this into a hierarchy of logical components, such as titles, authors, and sections. This structural information improves readability and is useful for indexing and retrieving information contained in documents. First we present a rule-based system segmenting the document image and estimating the logical role of these zones. It is extensively used for processing newspaper collections showing world-class performance. In the second part we introduce several machine learning approaches exploring large numbers of interrelated features. They can be adapted to geometrical models of the document structure, which may be set up as a linear sequence or a general graph. These advanced models require far more computational resources but show a better performance than simpler alternatives and might be used in future.","title":" Paa\u00df G., Konya I. (2011) Machine Learning for Document Structure Recognition."},{"location":"research/#power-r-scott-d-bouayad-agha-n-2003-document-structure","text":"Computational Linguistics, 2003, Volume 29, Issue 2, pp. 211-260 [Online] The MIT Press, Cambridge, USA. Available at https://direct.mit.edu/coli/article/29/2/211/1803/Document-Structure (Accessed 05 January 2022). We argue the case for abstract document structure as a separate descriptive level in the analysis and generation of written texts. The purpose of this representation is to mediate between the message of a text (i.e., its discourse structure) and its physical presentation (i.e., its organization into graphical constituents like sections, paragraphs, sentences, bulleted lists, figures, and footnotes). Abstract document structure can be seen as an extension of Nunberg's \u201ctext-grammar\u201d it is also closely related to \u201clogical\u201d markup in languages like HTML and LaTEX. We show that by using this intermediate representation, several subtasks in language generation and language understanding can be defined more cleanly.","title":" Power R., Scott D., Bouayad-Agha, N. (2003) Document Structure."},{"location":"research/#rahman-m-finin-t-2019-unfolding-the-structure-of-a-document-using-deep-learning","text":"arXiv [Online] Available at https://arxiv.org/abs/1910.03678 (Accessed 07 January 2022). Understanding and extracting of information from large documents, such as business opportunities, academic articles, medical documents and technical reports, poses challenges not present in short documents. Such large documents may be multi-themed, complex, noisy and cover diverse topics. We describe a framework that can analyze large documents and help people and computer systems locate desired information in them. We aim to automatically identify and classify different sections of documents and understand their purpose within the document. A key contribution of our research is modeling and extracting the logical and semantic structure of electronic documents using deep learning techniques. We evaluate the effectiveness and robustness of our framework through extensive experiments on two collections: more than one million scholarly articles from arXiv and a collection of requests for proposal documents from government sources.","title":" Rahman, M., Finin, T. (2019). Unfolding the Structure of a Document using Deep Learning."}]}